// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "air.h"

// Dispatch interfaces referenced by this interface
#include "Picture.h"
#include "font.h"

/////////////////////////////////////////////////////////////////////////////
// CAir

IMPLEMENT_DYNCREATE(CAir, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CAir properties

BOOL CAir::GetEnabled()
{
	BOOL result;
	GetProperty(DISPID_ENABLED, VT_BOOL, (void*)&result);
	return result;
}

void CAir::SetEnabled(BOOL propVal)
{
	SetProperty(DISPID_ENABLED, VT_BOOL, propVal);
}

CPicture CAir::GetBackPicture()
{
	LPDISPATCH pDispatch;
	GetProperty(0x1, VT_DISPATCH, (void*)&pDispatch);
	return CPicture(pDispatch);
}

void CAir::SetBackPicture(LPDISPATCH propVal)
{
	SetProperty(0x1, VT_DISPATCH, propVal);
}

COleFont CAir::GetFont()
{
	LPDISPATCH pDispatch;
	GetProperty(DISPID_FONT, VT_DISPATCH, (void*)&pDispatch);
	return COleFont(pDispatch);
}

void CAir::SetFont(LPDISPATCH propVal)
{
	SetProperty(DISPID_FONT, VT_DISPATCH, propVal);
}

short CAir::GetFonts()
{
	short result;
	GetProperty(0x2, VT_I2, (void*)&result);
	return result;
}

void CAir::SetFonts(short propVal)
{
	SetProperty(0x2, VT_I2, propVal);
}

long CAir::GetBevelInner()
{
	long result;
	GetProperty(0x3, VT_I4, (void*)&result);
	return result;
}

void CAir::SetBevelInner(long propVal)
{
	SetProperty(0x3, VT_I4, propVal);
}

long CAir::GetBevelOuter()
{
	long result;
	GetProperty(0x4, VT_I4, (void*)&result);
	return result;
}

void CAir::SetBevelOuter(long propVal)
{
	SetProperty(0x4, VT_I4, propVal);
}

short CAir::GetBevelWidth()
{
	short result;
	GetProperty(0x5, VT_I2, (void*)&result);
	return result;
}

void CAir::SetBevelWidth(short propVal)
{
	SetProperty(0x5, VT_I2, propVal);
}

short CAir::GetBorderWidth()
{
	short result;
	GetProperty(0x6, VT_I2, (void*)&result);
	return result;
}

void CAir::SetBorderWidth(short propVal)
{
	SetProperty(0x6, VT_I2, propVal);
}

long CAir::GetOutlineAlign()
{
	long result;
	GetProperty(0x7, VT_I4, (void*)&result);
	return result;
}

void CAir::SetOutlineAlign(long propVal)
{
	SetProperty(0x7, VT_I4, propVal);
}

unsigned long CAir::GetOutlineColor()
{
	unsigned long result;
	GetProperty(0x8, VT_I4, (void*)&result);
	return result;
}

void CAir::SetOutlineColor(unsigned long propVal)
{
	SetProperty(0x8, VT_I4, propVal);
}

CString CAir::GetOutlineTitle()
{
	CString result;
	GetProperty(0x9, VT_BSTR, (void*)&result);
	return result;
}

void CAir::SetOutlineTitle(LPCTSTR propVal)
{
	SetProperty(0x9, VT_BSTR, propVal);
}

short CAir::GetOutlineWidth()
{
	short result;
	GetProperty(0xa, VT_I2, (void*)&result);
	return result;
}

void CAir::SetOutlineWidth(short propVal)
{
	SetProperty(0xa, VT_I2, propVal);
}

double CAir::GetHeadingIndicator()
{
	double result;
	GetProperty(0xb, VT_R8, (void*)&result);
	return result;
}

void CAir::SetHeadingIndicator(double propVal)
{
	SetProperty(0xb, VT_R8, propVal);
}

double CAir::GetCompassHeading()
{
	double result;
	GetProperty(0xc, VT_R8, (void*)&result);
	return result;
}

void CAir::SetCompassHeading(double propVal)
{
	SetProperty(0xc, VT_R8, propVal);
}

long CAir::GetFrameStyle()
{
	long result;
	GetProperty(0xd, VT_I4, (void*)&result);
	return result;
}

void CAir::SetFrameStyle(long propVal)
{
	SetProperty(0xd, VT_I4, propVal);
}

unsigned long CAir::GetFrameColor()
{
	unsigned long result;
	GetProperty(0xe, VT_I4, (void*)&result);
	return result;
}

void CAir::SetFrameColor(unsigned long propVal)
{
	SetProperty(0xe, VT_I4, propVal);
}

CString CAir::GetFrameShape()
{
	CString result;
	GetProperty(0xf, VT_BSTR, (void*)&result);
	return result;
}

void CAir::SetFrameShape(LPCTSTR propVal)
{
	SetProperty(0xf, VT_BSTR, propVal);
}

double CAir::GetFrameLeft()
{
	double result;
	GetProperty(0x10, VT_R8, (void*)&result);
	return result;
}

void CAir::SetFrameLeft(double propVal)
{
	SetProperty(0x10, VT_R8, propVal);
}

double CAir::GetFrameTop()
{
	double result;
	GetProperty(0x11, VT_R8, (void*)&result);
	return result;
}

void CAir::SetFrameTop(double propVal)
{
	SetProperty(0x11, VT_R8, propVal);
}

double CAir::GetFrameRight()
{
	double result;
	GetProperty(0x12, VT_R8, (void*)&result);
	return result;
}

void CAir::SetFrameRight(double propVal)
{
	SetProperty(0x12, VT_R8, propVal);
}

double CAir::GetFrameBottom()
{
	double result;
	GetProperty(0x13, VT_R8, (void*)&result);
	return result;
}

void CAir::SetFrameBottom(double propVal)
{
	SetProperty(0x13, VT_R8, propVal);
}

CPicture CAir::GetFramePicture()
{
	LPDISPATCH pDispatch;
	GetProperty(0x14, VT_DISPATCH, (void*)&pDispatch);
	return CPicture(pDispatch);
}

void CAir::SetFramePicture(LPDISPATCH propVal)
{
	SetProperty(0x14, VT_DISPATCH, propVal);
}

long CAir::GetAltBarometerStyle()
{
	long result;
	GetProperty(0x15, VT_I4, (void*)&result);
	return result;
}

void CAir::SetAltBarometerStyle(long propVal)
{
	SetProperty(0x15, VT_I4, propVal);
}

long CAir::GetAltThousandStyle()
{
	long result;
	GetProperty(0x16, VT_I4, (void*)&result);
	return result;
}

void CAir::SetAltThousandStyle(long propVal)
{
	SetProperty(0x16, VT_I4, propVal);
}

double CAir::GetAltBarometer()
{
	double result;
	GetProperty(0x17, VT_R8, (void*)&result);
	return result;
}

void CAir::SetAltBarometer(double propVal)
{
	SetProperty(0x17, VT_R8, propVal);
}

double CAir::GetAltitude()
{
	double result;
	GetProperty(0x18, VT_R8, (void*)&result);
	return result;
}

void CAir::SetAltitude(double propVal)
{
	SetProperty(0x18, VT_R8, propVal);
}

CString CAir::GetCaption()
{
	CString result;
	GetProperty(DISPID_CAPTION, VT_BSTR, (void*)&result);
	return result;
}

void CAir::SetCaption(LPCTSTR propVal)
{
	SetProperty(DISPID_CAPTION, VT_BSTR, propVal);
}

short CAir::GetCaptions()
{
	short result;
	GetProperty(0x19, VT_I2, (void*)&result);
	return result;
}

void CAir::SetCaptions(short propVal)
{
	SetProperty(0x19, VT_I2, propVal);
}

double CAir::GetCaptionX()
{
	double result;
	GetProperty(0x1a, VT_R8, (void*)&result);
	return result;
}

void CAir::SetCaptionX(double propVal)
{
	SetProperty(0x1a, VT_R8, propVal);
}

double CAir::GetCaptionY()
{
	double result;
	GetProperty(0x1b, VT_R8, (void*)&result);
	return result;
}

void CAir::SetCaptionY(double propVal)
{
	SetProperty(0x1b, VT_R8, propVal);
}

short CAir::GetCaptionFontID()
{
	short result;
	GetProperty(0x1c, VT_I2, (void*)&result);
	return result;
}

void CAir::SetCaptionFontID(short propVal)
{
	SetProperty(0x1c, VT_I2, propVal);
}

unsigned long CAir::GetCaptionColor()
{
	unsigned long result;
	GetProperty(0x1d, VT_I4, (void*)&result);
	return result;
}

void CAir::SetCaptionColor(unsigned long propVal)
{
	SetProperty(0x1d, VT_I4, propVal);
}

double CAir::GetAirspeed()
{
	double result;
	GetProperty(0x1e, VT_R8, (void*)&result);
	return result;
}

void CAir::SetAirspeed(double propVal)
{
	SetProperty(0x1e, VT_R8, propVal);
}

double CAir::GetAirspeedVFE()
{
	double result;
	GetProperty(0x1f, VT_R8, (void*)&result);
	return result;
}

void CAir::SetAirspeedVFE(double propVal)
{
	SetProperty(0x1f, VT_R8, propVal);
}

double CAir::GetAirspeedVMax()
{
	double result;
	GetProperty(0x20, VT_R8, (void*)&result);
	return result;
}

void CAir::SetAirspeedVMax(double propVal)
{
	SetProperty(0x20, VT_R8, propVal);
}

double CAir::GetAirspeedVNE()
{
	double result;
	GetProperty(0x21, VT_R8, (void*)&result);
	return result;
}

void CAir::SetAirspeedVNE(double propVal)
{
	SetProperty(0x21, VT_R8, propVal);
}

double CAir::GetAirspeedVNO()
{
	double result;
	GetProperty(0x22, VT_R8, (void*)&result);
	return result;
}

void CAir::SetAirspeedVNO(double propVal)
{
	SetProperty(0x22, VT_R8, propVal);
}

double CAir::GetAirspeedVS0()
{
	double result;
	GetProperty(0x23, VT_R8, (void*)&result);
	return result;
}

void CAir::SetAirspeedVS0(double propVal)
{
	SetProperty(0x23, VT_R8, propVal);
}

double CAir::GetAirspeedVS1()
{
	double result;
	GetProperty(0x24, VT_R8, (void*)&result);
	return result;
}

void CAir::SetAirspeedVS1(double propVal)
{
	SetProperty(0x24, VT_R8, propVal);
}

OLE_COLOR CAir::GetBackColor()
{
	OLE_COLOR result;
	GetProperty(DISPID_BACKCOLOR, VT_I4, (void*)&result);
	return result;
}

void CAir::SetBackColor(OLE_COLOR propVal)
{
	SetProperty(DISPID_BACKCOLOR, VT_I4, propVal);
}

long CAir::GetCompassStyle()
{
	long result;
	GetProperty(0x25, VT_I4, (void*)&result);
	return result;
}

void CAir::SetCompassStyle(long propVal)
{
	SetProperty(0x25, VT_I4, propVal);
}

long CAir::GetDisplayMode()
{
	long result;
	GetProperty(0x26, VT_I4, (void*)&result);
	return result;
}

void CAir::SetDisplayMode(long propVal)
{
	SetProperty(0x26, VT_I4, propVal);
}

BOOL CAir::GetMouseControl()
{
	BOOL result;
	GetProperty(0x27, VT_BOOL, (void*)&result);
	return result;
}

void CAir::SetMouseControl(BOOL propVal)
{
	SetProperty(0x27, VT_BOOL, propVal);
}

double CAir::GetAltBarometerX()
{
	double result;
	GetProperty(0x28, VT_R8, (void*)&result);
	return result;
}

void CAir::SetAltBarometerX(double propVal)
{
	SetProperty(0x28, VT_R8, propVal);
}

double CAir::GetAltBarometerY()
{
	double result;
	GetProperty(0x29, VT_R8, (void*)&result);
	return result;
}

void CAir::SetAltBarometerY(double propVal)
{
	SetProperty(0x29, VT_R8, propVal);
}

double CAir::GetAltThousandX()
{
	double result;
	GetProperty(0x2a, VT_R8, (void*)&result);
	return result;
}

void CAir::SetAltThousandX(double propVal)
{
	SetProperty(0x2a, VT_R8, propVal);
}

double CAir::GetAltThousandY()
{
	double result;
	GetProperty(0x2b, VT_R8, (void*)&result);
	return result;
}

void CAir::SetAltThousandY(double propVal)
{
	SetProperty(0x2b, VT_R8, propVal);
}

short CAir::GetAltBarometerFontID()
{
	short result;
	GetProperty(0x2c, VT_I2, (void*)&result);
	return result;
}

void CAir::SetAltBarometerFontID(short propVal)
{
	SetProperty(0x2c, VT_I2, propVal);
}

short CAir::GetAltThousandFontID()
{
	short result;
	GetProperty(0x2d, VT_I2, (void*)&result);
	return result;
}

void CAir::SetAltThousandFontID(short propVal)
{
	SetProperty(0x2d, VT_I2, propVal);
}

double CAir::GetClimbRate()
{
	double result;
	GetProperty(0x2e, VT_R8, (void*)&result);
	return result;
}

void CAir::SetClimbRate(double propVal)
{
	SetProperty(0x2e, VT_R8, propVal);
}

double CAir::GetClimbRateMax()
{
	double result;
	GetProperty(0x2f, VT_R8, (void*)&result);
	return result;
}

void CAir::SetClimbRateMax(double propVal)
{
	SetProperty(0x2f, VT_R8, propVal);
}

unsigned long CAir::GetTicColor()
{
	unsigned long result;
	GetProperty(0x30, VT_I4, (void*)&result);
	return result;
}

void CAir::SetTicColor(unsigned long propVal)
{
	SetProperty(0x30, VT_I4, propVal);
}

unsigned long CAir::GetNeedleColor()
{
	unsigned long result;
	GetProperty(0x31, VT_I4, (void*)&result);
	return result;
}

void CAir::SetNeedleColor(unsigned long propVal)
{
	SetProperty(0x31, VT_I4, propVal);
}

BOOL CAir::GetHSICompass()
{
	BOOL result;
	GetProperty(0x32, VT_BOOL, (void*)&result);
	return result;
}

void CAir::SetHSICompass(BOOL propVal)
{
	SetProperty(0x32, VT_BOOL, propVal);
}

double CAir::GetHSIBearing()
{
	double result;
	GetProperty(0x33, VT_R8, (void*)&result);
	return result;
}

void CAir::SetHSIBearing(double propVal)
{
	SetProperty(0x33, VT_R8, propVal);
}

double CAir::GetHSIHeading()
{
	double result;
	GetProperty(0x34, VT_R8, (void*)&result);
	return result;
}

void CAir::SetHSIHeading(double propVal)
{
	SetProperty(0x34, VT_R8, propVal);
}

double CAir::GetHSIGlideSlopeDelta()
{
	double result;
	GetProperty(0x35, VT_R8, (void*)&result);
	return result;
}

void CAir::SetHSIGlideSlopeDelta(double propVal)
{
	SetProperty(0x35, VT_R8, propVal);
}

double CAir::GetHSIGlideSlopeDeviation()
{
	double result;
	GetProperty(0x36, VT_R8, (void*)&result);
	return result;
}

void CAir::SetHSIGlideSlopeDeviation(double propVal)
{
	SetProperty(0x36, VT_R8, propVal);
}

double CAir::GetHSICourseHeading()
{
	double result;
	GetProperty(0x37, VT_R8, (void*)&result);
	return result;
}

void CAir::SetHSICourseHeading(double propVal)
{
	SetProperty(0x37, VT_R8, propVal);
}

long CAir::GetHSINavigationSource()
{
	long result;
	GetProperty(0x38, VT_I4, (void*)&result);
	return result;
}

void CAir::SetHSINavigationSource(long propVal)
{
	SetProperty(0x38, VT_I4, propVal);
}

double CAir::GetHSICourseDelta()
{
	double result;
	GetProperty(0x39, VT_R8, (void*)&result);
	return result;
}

void CAir::SetHSICourseDelta(double propVal)
{
	SetProperty(0x39, VT_R8, propVal);
}

double CAir::GetHSICourseDeviation()
{
	double result;
	GetProperty(0x3a, VT_R8, (void*)&result);
	return result;
}

void CAir::SetHSICourseDeviation(double propVal)
{
	SetProperty(0x3a, VT_R8, propVal);
}

BOOL CAir::GetHSIBug()
{
	BOOL result;
	GetProperty(0x3b, VT_BOOL, (void*)&result);
	return result;
}

void CAir::SetHSIBug(BOOL propVal)
{
	SetProperty(0x3b, VT_BOOL, propVal);
}

double CAir::GetHSIBugHeading()
{
	double result;
	GetProperty(0x3c, VT_R8, (void*)&result);
	return result;
}

void CAir::SetHSIBugHeading(double propVal)
{
	SetProperty(0x3c, VT_R8, propVal);
}

long CAir::GetHSINavPointer()
{
	long result;
	GetProperty(0x3d, VT_I4, (void*)&result);
	return result;
}

void CAir::SetHSINavPointer(long propVal)
{
	SetProperty(0x3d, VT_I4, propVal);
}

unsigned long CAir::GetHSIBearingColor()
{
	unsigned long result;
	GetProperty(0x3e, VT_I4, (void*)&result);
	return result;
}

void CAir::SetHSIBearingColor(unsigned long propVal)
{
	SetProperty(0x3e, VT_I4, propVal);
}

unsigned long CAir::GetHSICourseColor()
{
	unsigned long result;
	GetProperty(0x3f, VT_I4, (void*)&result);
	return result;
}

void CAir::SetHSICourseColor(unsigned long propVal)
{
	SetProperty(0x3f, VT_I4, propVal);
}

CString CAir::GetHSINavMarker()
{
	CString result;
	GetProperty(0x40, VT_BSTR, (void*)&result);
	return result;
}

void CAir::SetHSINavMarker(LPCTSTR propVal)
{
	SetProperty(0x40, VT_BSTR, propVal);
}

unsigned long CAir::GetHSIBugColor()
{
	unsigned long result;
	GetProperty(0x41, VT_I4, (void*)&result);
	return result;
}

void CAir::SetHSIBugColor(unsigned long propVal)
{
	SetProperty(0x41, VT_I4, propVal);
}

long CAir::GetHSICourseDisplay()
{
	long result;
	GetProperty(0x42, VT_I4, (void*)&result);
	return result;
}

void CAir::SetHSICourseDisplay(long propVal)
{
	SetProperty(0x42, VT_I4, propVal);
}

double CAir::GetHSIDistance()
{
	double result;
	GetProperty(0x43, VT_R8, (void*)&result);
	return result;
}

void CAir::SetHSIDistance(double propVal)
{
	SetProperty(0x43, VT_R8, propVal);
}

long CAir::GetHSIDistanceDisplay()
{
	long result;
	GetProperty(0x44, VT_I4, (void*)&result);
	return result;
}

void CAir::SetHSIDistanceDisplay(long propVal)
{
	SetProperty(0x44, VT_I4, propVal);
}

double CAir::GetHSISpeed()
{
	double result;
	GetProperty(0x45, VT_R8, (void*)&result);
	return result;
}

void CAir::SetHSISpeed(double propVal)
{
	SetProperty(0x45, VT_R8, propVal);
}

double CAir::GetHSITime()
{
	double result;
	GetProperty(0x46, VT_R8, (void*)&result);
	return result;
}

void CAir::SetHSITime(double propVal)
{
	SetProperty(0x46, VT_R8, propVal);
}

long CAir::GetHSITimeSpeedDisplay()
{
	long result;
	GetProperty(0x47, VT_I4, (void*)&result);
	return result;
}

void CAir::SetHSITimeSpeedDisplay(long propVal)
{
	SetProperty(0x47, VT_I4, propVal);
}

double CAir::GetAHPitch()
{
	double result;
	GetProperty(0x48, VT_R8, (void*)&result);
	return result;
}

void CAir::SetAHPitch(double propVal)
{
	SetProperty(0x48, VT_R8, propVal);
}

double CAir::GetAHRoll()
{
	double result;
	GetProperty(0x49, VT_R8, (void*)&result);
	return result;
}

void CAir::SetAHRoll(double propVal)
{
	SetProperty(0x49, VT_R8, propVal);
}

unsigned long CAir::GetAHGroundColor()
{
	unsigned long result;
	GetProperty(0x4a, VT_I4, (void*)&result);
	return result;
}

void CAir::SetAHGroundColor(unsigned long propVal)
{
	SetProperty(0x4a, VT_I4, propVal);
}

unsigned long CAir::GetAHSkyColor()
{
	unsigned long result;
	GetProperty(0x4b, VT_I4, (void*)&result);
	return result;
}

void CAir::SetAHSkyColor(unsigned long propVal)
{
	SetProperty(0x4b, VT_I4, propVal);
}

double CAir::GetAHPitchRange()
{
	double result;
	GetProperty(0x4c, VT_R8, (void*)&result);
	return result;
}

void CAir::SetAHPitchRange(double propVal)
{
	SetProperty(0x4c, VT_R8, propVal);
}

double CAir::GetAHPitchScale()
{
	double result;
	GetProperty(0x4d, VT_R8, (void*)&result);
	return result;
}

void CAir::SetAHPitchScale(double propVal)
{
	SetProperty(0x4d, VT_R8, propVal);
}

long CAir::GetAHPitchStyle()
{
	long result;
	GetProperty(0x4e, VT_I4, (void*)&result);
	return result;
}

void CAir::SetAHPitchStyle(long propVal)
{
	SetProperty(0x4e, VT_I4, propVal);
}

double CAir::GetAHHeading()
{
	double result;
	GetProperty(0x4f, VT_R8, (void*)&result);
	return result;
}

void CAir::SetAHHeading(double propVal)
{
	SetProperty(0x4f, VT_R8, propVal);
}

long CAir::GetAHHeadingStyle()
{
	long result;
	GetProperty(0x50, VT_I4, (void*)&result);
	return result;
}

void CAir::SetAHHeadingStyle(long propVal)
{
	SetProperty(0x50, VT_I4, propVal);
}

BOOL CAir::GetAHBug()
{
	BOOL result;
	GetProperty(0x51, VT_BOOL, (void*)&result);
	return result;
}

void CAir::SetAHBug(BOOL propVal)
{
	SetProperty(0x51, VT_BOOL, propVal);
}

unsigned long CAir::GetAHBugColor()
{
	unsigned long result;
	GetProperty(0x52, VT_I4, (void*)&result);
	return result;
}

void CAir::SetAHBugColor(unsigned long propVal)
{
	SetProperty(0x52, VT_I4, propVal);
}

double CAir::GetAHBugHeading()
{
	double result;
	GetProperty(0x53, VT_R8, (void*)&result);
	return result;
}

void CAir::SetAHBugHeading(double propVal)
{
	SetProperty(0x53, VT_R8, propVal);
}

double CAir::GetAHHeadingScale()
{
	double result;
	GetProperty(0x54, VT_R8, (void*)&result);
	return result;
}

void CAir::SetAHHeadingScale(double propVal)
{
	SetProperty(0x54, VT_R8, propVal);
}

double CAir::GetAHHeadingOffset()
{
	double result;
	GetProperty(0x55, VT_R8, (void*)&result);
	return result;
}

void CAir::SetAHHeadingOffset(double propVal)
{
	SetProperty(0x55, VT_R8, propVal);
}

long CAir::GetAHReferenceStyle()
{
	long result;
	GetProperty(0x56, VT_I4, (void*)&result);
	return result;
}

void CAir::SetAHReferenceStyle(long propVal)
{
	SetProperty(0x56, VT_I4, propVal);
}

unsigned long CAir::GetAHReferenceColor()
{
	unsigned long result;
	GetProperty(0x57, VT_I4, (void*)&result);
	return result;
}

void CAir::SetAHReferenceColor(unsigned long propVal)
{
	SetProperty(0x57, VT_I4, propVal);
}

double CAir::GetTCInclinometer()
{
	double result;
	GetProperty(0x58, VT_R8, (void*)&result);
	return result;
}

void CAir::SetTCInclinometer(double propVal)
{
	SetProperty(0x58, VT_R8, propVal);
}

double CAir::GetTCTurn()
{
	double result;
	GetProperty(0x59, VT_R8, (void*)&result);
	return result;
}

void CAir::SetTCTurn(double propVal)
{
	SetProperty(0x59, VT_R8, propVal);
}

double CAir::GetCIActCourse()
{
	double result;
	GetProperty(0x5a, VT_R8, (void*)&result);
	return result;
}

void CAir::SetCIActCourse(double propVal)
{
	SetProperty(0x5a, VT_R8, propVal);
}

double CAir::GetCIOrdCourse()
{
	double result;
	GetProperty(0x5b, VT_R8, (void*)&result);
	return result;
}

void CAir::SetCIOrdCourse(double propVal)
{
	SetProperty(0x5b, VT_R8, propVal);
}

double CAir::GetADFBearing()
{
	double result;
	GetProperty(0x5c, VT_R8, (void*)&result);
	return result;
}

void CAir::SetADFBearing(double propVal)
{
	SetProperty(0x5c, VT_R8, propVal);
}

double CAir::GetRMICompass()
{
	double result;
	GetProperty(0x5d, VT_R8, (void*)&result);
	return result;
}

void CAir::SetRMICompass(double propVal)
{
	SetProperty(0x5d, VT_R8, propVal);
}

BOOL CAir::GetOBIArcFlag()
{
	BOOL result;
	GetProperty(0x5e, VT_BOOL, (void*)&result);
	return result;
}

void CAir::SetOBIArcFlag(BOOL propVal)
{
	SetProperty(0x5e, VT_BOOL, propVal);
}

BOOL CAir::GetOBIBackCourse()
{
	BOOL result;
	GetProperty(0x5f, VT_BOOL, (void*)&result);
	return result;
}

void CAir::SetOBIBackCourse(BOOL propVal)
{
	SetProperty(0x5f, VT_BOOL, propVal);
}

double CAir::GetOBICourse()
{
	double result;
	GetProperty(0x60, VT_R8, (void*)&result);
	return result;
}

void CAir::SetOBICourse(double propVal)
{
	SetProperty(0x60, VT_R8, propVal);
}

double CAir::GetOBICourseDeviation()
{
	double result;
	GetProperty(0x61, VT_R8, (void*)&result);
	return result;
}

void CAir::SetOBICourseDeviation(double propVal)
{
	SetProperty(0x61, VT_R8, propVal);
}

double CAir::GetOBIGlideSlope()
{
	double result;
	GetProperty(0x62, VT_R8, (void*)&result);
	return result;
}

void CAir::SetOBIGlideSlope(double propVal)
{
	SetProperty(0x62, VT_R8, propVal);
}

BOOL CAir::GetOBIGSFlag()
{
	BOOL result;
	GetProperty(0x63, VT_BOOL, (void*)&result);
	return result;
}

void CAir::SetOBIGSFlag(BOOL propVal)
{
	SetProperty(0x63, VT_BOOL, propVal);
}

BOOL CAir::GetOBINAVFlag()
{
	BOOL result;
	GetProperty(0x64, VT_BOOL, (void*)&result);
	return result;
}

void CAir::SetOBINAVFlag(BOOL propVal)
{
	SetProperty(0x64, VT_BOOL, propVal);
}

long CAir::GetOBIToFrom()
{
	long result;
	GetProperty(0x65, VT_I4, (void*)&result);
	return result;
}

void CAir::SetOBIToFrom(long propVal)
{
	SetProperty(0x65, VT_I4, propVal);
}

BOOL CAir::GetOutline()
{
	BOOL result;
	GetProperty(0x66, VT_BOOL, (void*)&result);
	return result;
}

void CAir::SetOutline(BOOL propVal)
{
	SetProperty(0x66, VT_BOOL, propVal);
}

short CAir::GetCaptionID()
{
	short result;
	GetProperty(0x67, VT_I2, (void*)&result);
	return result;
}

void CAir::SetCaptionID(short propVal)
{
	SetProperty(0x67, VT_I2, propVal);
}

short CAir::GetFontID()
{
	short result;
	GetProperty(0x68, VT_I2, (void*)&result);
	return result;
}

void CAir::SetFontID(short propVal)
{
	SetProperty(0x68, VT_I2, propVal);
}

long CAir::GetCaptionFlag()
{
	long result;
	GetProperty(0x69, VT_I4, (void*)&result);
	return result;
}

void CAir::SetCaptionFlag(long propVal)
{
	SetProperty(0x69, VT_I4, propVal);
}

BOOL CAir::GetAutoRedraw()
{
	BOOL result;
	GetProperty(0x6a, VT_BOOL, (void*)&result);
	return result;
}

void CAir::SetAutoRedraw(BOOL propVal)
{
	SetProperty(0x6a, VT_BOOL, propVal);
}

float CAir::GetFontSize()
{
	float result;
	GetProperty(0x6b, VT_R4, (void*)&result);
	return result;
}

void CAir::SetFontSize(float propVal)
{
	SetProperty(0x6b, VT_R4, propVal);
}

BOOL CAir::GetFontBold()
{
	BOOL result;
	GetProperty(0x6c, VT_BOOL, (void*)&result);
	return result;
}

void CAir::SetFontBold(BOOL propVal)
{
	SetProperty(0x6c, VT_BOOL, propVal);
}

BOOL CAir::GetFontItalic()
{
	BOOL result;
	GetProperty(0x6d, VT_BOOL, (void*)&result);
	return result;
}

void CAir::SetFontItalic(BOOL propVal)
{
	SetProperty(0x6d, VT_BOOL, propVal);
}

BOOL CAir::GetFontStrikethru()
{
	BOOL result;
	GetProperty(0x6e, VT_BOOL, (void*)&result);
	return result;
}

void CAir::SetFontStrikethru(BOOL propVal)
{
	SetProperty(0x6e, VT_BOOL, propVal);
}

BOOL CAir::GetFontUnderline()
{
	BOOL result;
	GetProperty(0x6f, VT_BOOL, (void*)&result);
	return result;
}

void CAir::SetFontUnderline(BOOL propVal)
{
	SetProperty(0x6f, VT_BOOL, propVal);
}

CString CAir::GetFontName()
{
	CString result;
	GetProperty(0x70, VT_BSTR, (void*)&result);
	return result;
}

void CAir::SetFontName(LPCTSTR propVal)
{
	SetProperty(0x70, VT_BSTR, propVal);
}

double CAir::GetValue()
{
	double result;
	GetProperty(0x71, VT_R8, (void*)&result);
	return result;
}

void CAir::SetValue(double propVal)
{
	SetProperty(0x71, VT_R8, propVal);
}

double CAir::GetRMIBearing1()
{
	double result;
	GetProperty(0x72, VT_R8, (void*)&result);
	return result;
}

void CAir::SetRMIBearing1(double propVal)
{
	SetProperty(0x72, VT_R8, propVal);
}

double CAir::GetRMIBearing2()
{
	double result;
	GetProperty(0x73, VT_R8, (void*)&result);
	return result;
}

void CAir::SetRMIBearing2(double propVal)
{
	SetProperty(0x73, VT_R8, propVal);
}

long CAir::GetRMIBearingType1()
{
	long result;
	GetProperty(0x74, VT_I4, (void*)&result);
	return result;
}

void CAir::SetRMIBearingType1(long propVal)
{
	SetProperty(0x74, VT_I4, propVal);
}

long CAir::GetRMIBearingType2()
{
	long result;
	GetProperty(0x75, VT_I4, (void*)&result);
	return result;
}

void CAir::SetRMIBearingType2(long propVal)
{
	SetProperty(0x75, VT_I4, propVal);
}

unsigned long CAir::GetRMIBearingColor1()
{
	unsigned long result;
	GetProperty(0x76, VT_I4, (void*)&result);
	return result;
}

void CAir::SetRMIBearingColor1(unsigned long propVal)
{
	SetProperty(0x76, VT_I4, propVal);
}

unsigned long CAir::GetRMIBearingColor2()
{
	unsigned long result;
	GetProperty(0x77, VT_I4, (void*)&result);
	return result;
}

void CAir::SetRMIBearingColor2(unsigned long propVal)
{
	SetProperty(0x77, VT_I4, propVal);
}

CString CAir::GetHeadingShape()
{
	CString result;
	GetProperty(0x78, VT_BSTR, (void*)&result);
	return result;
}

void CAir::SetHeadingShape(LPCTSTR propVal)
{
	SetProperty(0x78, VT_BSTR, propVal);
}

unsigned long CAir::GetAltBarometerColor()
{
	unsigned long result;
	GetProperty(0x79, VT_I4, (void*)&result);
	return result;
}

void CAir::SetAltBarometerColor(unsigned long propVal)
{
	SetProperty(0x79, VT_I4, propVal);
}

BOOL CAir::GetSingleBuffer()
{
	BOOL result;
	GetProperty(0x7a, VT_BOOL, (void*)&result);
	return result;
}

void CAir::SetSingleBuffer(BOOL propVal)
{
	SetProperty(0x7a, VT_BOOL, propVal);
}

long CAir::GetAHFlightDirector()
{
	long result;
	GetProperty(0x7b, VT_I4, (void*)&result);
	return result;
}

void CAir::SetAHFlightDirector(long propVal)
{
	SetProperty(0x7b, VT_I4, propVal);
}

double CAir::GetAHCuePitch()
{
	double result;
	GetProperty(0x7c, VT_R8, (void*)&result);
	return result;
}

void CAir::SetAHCuePitch(double propVal)
{
	SetProperty(0x7c, VT_R8, propVal);
}

double CAir::GetAHCueRoll()
{
	double result;
	GetProperty(0x7d, VT_R8, (void*)&result);
	return result;
}

void CAir::SetAHCueRoll(double propVal)
{
	SetProperty(0x7d, VT_R8, propVal);
}

unsigned long CAir::GetAHFlightDirectorColor()
{
	unsigned long result;
	GetProperty(0x7e, VT_I4, (void*)&result);
	return result;
}

void CAir::SetAHFlightDirectorColor(unsigned long propVal)
{
	SetProperty(0x7e, VT_I4, propVal);
}

BOOL CAir::GetFocusOutline()
{
	BOOL result;
	GetProperty(0x7f, VT_BOOL, (void*)&result);
	return result;
}

void CAir::SetFocusOutline(BOOL propVal)
{
	SetProperty(0x7f, VT_BOOL, propVal);
}

OLE_HANDLE CAir::GetHWnd()
{
	OLE_HANDLE result;
	GetProperty(DISPID_HWND, VT_I4, (void*)&result);
	return result;
}

void CAir::SetHWnd(OLE_HANDLE propVal)
{
	SetProperty(DISPID_HWND, VT_I4, propVal);
}

short CAir::Get_DisplayMode()
{
	short result;
	GetProperty(0x0, VT_I2, (void*)&result);
	return result;
}

void CAir::Set_DisplayMode(short propVal)
{
	SetProperty(0x0, VT_I2, propVal);
}

/////////////////////////////////////////////////////////////////////////////
// CAir operations

void CAir::Redraw()
{
	InvokeHelper(0x80, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CAir::RedrawStatic()
{
	InvokeHelper(0x81, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CAir::ShowPropertyPage()
{
	InvokeHelper(0x82, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CAir::AboutBox()
{
	InvokeHelper(0xfffffdd8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}
